% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/SCALE.R
\name{SCALE}
\alias{SCALE}
\title{ScaLE (Scaleable Langevin Exact Algorithm)}
\usage{
SCALE(
  num_particles,
  d,
  theta,
  num_meshes,
  kill_time,
  data,
  ess_thresh = 0,
  parallel = FALSE,
  resample_every = 10,
  rescale = FALSE,
  subsample = FALSE,
  print_updates = FALSE
)
}
\arguments{
\item{num_particles}{Integer number of particles}

\item{d}{Integer dimension of distribution}

\item{theta}{Brownian motion hypercube size. Positive single value}

\item{num_meshes}{Integer. Equivalent to iteration count}

\item{kill_time}{Stop time of the algorithm. Positive numeric}

\item{data}{An R6 [Data()] class specifying the distribution to be sampled from.}

\item{ess_thresh}{Effective sample size threshold. numeric from [0, 1]. If empirical ess is lower than threshold, particles will be resampled}

\item{parallel}{Whether to parallelise the importance sampling step at each iteration. Does not currently have better performance}

\item{resample_every}{A second way to resample particles at every nth iteration. Numeric integer less than `num_meshes`}

\item{rescale}{Logical. If TRUE, BM path will be centered at 0 but all calls to phi and boundedness will be scaled by preconditioning matrix and centered, should help with mixing. If FALSE no such scaling will take place.}

\item{subsample}{Logical. If TRUE, [get_phi_info()] will sample 2 data points for each phi update. If FALSE, use full data set for each phi_bound.}

\item{print_updates}{Logical. Display updates}
}
\value{
A [list()] containing all input `parameters` and a second list `mesh_hist` of length `num_meshes`.
Each `mesh_hist` for any given iteration includes:
- `particles` list containing all `particle` classes at
- `iter_counter` what iteration count
- `incr_log_weight` a vector of incremental log weight for each particle
- `norm_weight` A vector of normalised weights
- `ess` The empirical effective sample size of the current particles
- `resample` Logical, whether the particles were resampled at current iteration
- `mesh_idx` Index of current mesh time
- `mesh_time` Mesh time of Brownian Motion path particles
- `id` A vector of id's of all particles
}
\description{
ScaLE (Scaleable Langevin Exact Algorithm)
}
\examples{

mu <- 0
gamma <- 1

cauchy_data <- CauchyData$new(mu, gamma)

t_inc <- 1
iterations <- 2
kill_time <- iterations * t_inc
num_particles <- 10
rescale <- FALSE
subsample <- FALSE

SCALE_info <- SCALE(num_particles = num_particles, d = 1, theta = 5, num_meshes = iterations, kill_time = kill_time, data = cauchy_data,
                    ess_thresh = 0, parallel = FALSE, resample_every = Inf, rescale = rescale, subsample = subsample)
}
